package com.sitemap.qingzangtrain.activity;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.app.Fragment;
import android.support.v4.widget.DrawerLayout;
import android.util.Log;
import android.view.Gravity;
import android.view.KeyEvent;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.ZoomControls;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.baidu.mapapi.map.BaiduMap;
import com.baidu.mapapi.map.BitmapDescriptor;
import com.baidu.mapapi.map.BitmapDescriptorFactory;
import com.baidu.mapapi.map.InfoWindow;
import com.baidu.mapapi.map.MapStatus;
import com.baidu.mapapi.map.MapStatusUpdate;
import com.baidu.mapapi.map.MapStatusUpdateFactory;
import com.baidu.mapapi.map.MapView;
import com.baidu.mapapi.map.Marker;
import com.baidu.mapapi.map.MarkerOptions;
import com.baidu.mapapi.map.OverlayOptions;
import com.baidu.mapapi.model.LatLng;
import com.baidu.mapapi.model.inner.Point;
import com.sitemap.qingzangtrain.R;
import com.sitemap.qingzangtrain.adapter.MainDrawerLeftAdapter;
import com.sitemap.qingzangtrain.adapter.MyViewPagerAdapter;
import com.sitemap.qingzangtrain.application.MyApplication;
import com.sitemap.qingzangtrain.config.RequestCode;
import com.sitemap.qingzangtrain.config.WebUrlConfig;
import com.sitemap.qingzangtrain.fragment.DataFragment;
import com.sitemap.qingzangtrain.fragment.MapFragment;
import com.sitemap.qingzangtrain.http.HttpUtil;
import com.sitemap.qingzangtrain.model.StatisticsInfoModel;
import com.sitemap.qingzangtrain.model.TrainModel;
import com.sitemap.qingzangtrain.model.WarmNumsModel;
import com.sitemap.qingzangtrain.util.AnimaUtil;
import com.sitemap.qingzangtrain.util.ParserUtil;
import com.sitemap.qingzangtrain.util.ToastUtil;
import com.sitemap.qingzangtrain.view.NoScrollViewPager;
import com.sitemap.qingzangtrain.view.RoundProgressDialog;

import org.xutils.view.annotation.ContentView;
import org.xutils.view.annotation.ViewInject;

import java.util.ArrayList;
import java.util.List;

/**
 * 主页面 main
 * Created by chenmeng on 2017/1/13.
 */
@ContentView(R.layout.activity_main)
public class MainActivity extends BaseActivity implements View.OnClickListener{
    private MainActivity mContext;//本类
    @ViewInject(R.id.mDrawerLayout)
    private DrawerLayout mDrawerLayout;// 抽屉布局
    @ViewInject(R.id.train_menu)
    private LinearLayout train_menu;//左边菜单
    @ViewInject(R.id.train_tongji)
    private LinearLayout train_tongji;//右边菜单
    private RoundProgressDialog progressDialog;//加载条
    private HttpUtil http;//网络请求
    private List<TrainModel> ltrain=new ArrayList<TrainModel>();//火车列表
    @ViewInject(R.id.main_listView)
    private ListView mLeftLv;//左侧布局
    private String troubleLevel = "1;2";//首页查询等级 值
    private long exitTime = 0;//退出的时间
    private MessageReceiver jPushReceiver;//接收极光广播
    public static final String MESSAGE_RECEIVED_ACTION = "com.sitemap.train.MESSAGE_RECEIVED_ACTION";
    @ViewInject(R.id.msg_size)
    private TextView mMsgNum;//未读消息数量
    private boolean isReadMsg = false;//是否有告警数据
    @ViewInject(R.id.data)
    private TextView mData;//实时数据
    @ViewInject(R.id.map)
    private TextView mMap;//地图
    @ViewInject(R.id.viewpager)
    private NoScrollViewPager mViewPager;// ViewPager对象
    private DataFragment f1;//实时数据
    private MapFragment f2;//地图
    private ArrayList<Fragment> mFragmentList;// 子页面列表

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mContext = this;
        init();
    }

    @Override
    public void onResume() {
        super.onResume();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        unregisterReceiver(jPushReceiver);
    }

    private Handler handler = new Handler(){
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            if (progressDialog != null && progressDialog.isShowing()) {
                progressDialog.dismiss();// 关闭进度条
            }
            switch (msg.what){
                case HttpUtil.SUCCESS:
                    if (msg.arg1 == RequestCode.GETTRAININFO){
                        ltrain.clear();
                        ltrain= ParserUtil.jsonToList(msg.obj.toString(),TrainModel.class);
                    }
                    //获取故障（告警）列表统计数据
                    if (msg.arg1 == RequestCode.GETTOUBLESNUM){
                        mMsgNum.setVisibility(View.VISIBLE);
                        JSONObject ob = JSONObject.parseObject(msg.obj.toString());
                        String number = ob.getString("number");
                        if (number.equals("0")){
                            isReadMsg = false;
                            mMsgNum.setVisibility(View.GONE);
                        }else{
                            isReadMsg = true;
                            mMsgNum.setText(number);
                        }
                    }
                    break;
                case HttpUtil.EMPTY:
                    //获取故障（告警）列表统计数据
                    if (msg.arg1 == RequestCode.GETTOUBLESNUM){
                        isReadMsg = false;
                        mMsgNum.setVisibility(View.GONE);
                    }
                    break;
                case HttpUtil.FAILURE:
                    ToastUtil.showBottomLong(mContext,RequestCode.ERRORINFO);
                    break;
                case HttpUtil.LOADING:
                    break;
                default:
                    break;
            }
        }
    };

    private void init(){
        if (http == null){
            http = new HttpUtil(handler);
        }
        mFragmentList = new ArrayList<>();
        mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED); // 关闭手势滑动
        mDrawerLayout.setFocusableInTouchMode(false);//可以点击返回键
        train_menu.setOnClickListener(this);
        train_tongji.setOnClickListener(this);

        mData.setOnClickListener(this);
        mMap.setOnClickListener(this);
        mData.setSelected(true);
        f1 = new DataFragment();
        f2 = new MapFragment();
        mFragmentList.add(f1);
        mFragmentList.add(f2);
        mViewPager.setAdapter(new MyViewPagerAdapter(getSupportFragmentManager(),mFragmentList));

        getLeftListView();

        //注册广播
        jPushReceiver=new MessageReceiver();
		IntentFilter filter = new IntentFilter();
		filter.setPriority(IntentFilter.SYSTEM_HIGH_PRIORITY);
		filter.addAction(MESSAGE_RECEIVED_ACTION);
		registerReceiver(jPushReceiver, filter);
        getNetData();
    }

    /**
     * 获取网络数据
     */
    private void getNetData(){
        if (MyApplication.getNetObject().isNetConnected()) {
            progressDialog = RoundProgressDialog.createDialog(this);
            if (progressDialog != null && !progressDialog.isShowing()) {
                progressDialog.setMessage("加载中...");
                progressDialog.show();
            }
            getTrainInfo();
            getTroublesNum();
        } else {
            ToastUtil.showBottomShort(this, RequestCode.NOLOGIN);
        }
    }

    /**
     * 查询列车运行状态
     */
    private void getTrainInfo(){
        http.sendGet(RequestCode.GETTRAININFO, WebUrlConfig.getTrainInfo());
    }


    /**
     * 获取故障（告警）列表统计数据
     */
    private void getTroublesNum(){
        http.sendGet(RequestCode.GETTOUBLESNUM,WebUrlConfig.getTroublesNum(MyApplication.loginModel.getUserID()));
    }

    /**
     * 初始化 左侧数据
     */
    private void getLeftListView(){
        MainDrawerLeftAdapter adapter = new MainDrawerLeftAdapter(mContext);
        mLeftLv.setAdapter(adapter);
        mLeftLv.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                mDrawerLayout.closeDrawers();
                Intent intent = new Intent();
                switch (position){
                    case 0://历史数据
                        if (ltrain.size()>0){
                            intent.setClass(MainActivity.this,DataCheckActivity.class);
                            intent.putExtra("trainsNum", JSON.toJSONString(getTrainNumberAll(ltrain)));
                            intent.putExtra("trainsId",JSON.toJSONString(getTrainIdAll(ltrain)));
                            startActivity(intent);
                        }
                        break;
                    case 1://历史告警
                        if (MyApplication.loginModel.getType().equals("1")||MyApplication.loginModel.getType().equals("4")){
                            intent.setClass(mContext,GaojingLeadActivity.class);
                        }else if(MyApplication.loginModel.getType().equals("2")){//乘务员
                            intent.setClass(mContext,GaojingTrainmanActivity.class);
                        }else if(MyApplication.loginModel.getType().equals("3")){//检修员
                            intent.setClass(mContext,GaojingRepairerActivity.class);
                        }
                        intent.putExtra("troubleLevel","");//等级
                        intent.putExtra("type",1);
                        startActivity(intent);
                        break;
                    case 2://数据统计
                        break;
                    case 3://设置
                        intent.setClass(mContext,SetActivity.class);
                        startActivity(intent);
                        break;
                    default:
                        break;
                }
            }
        });
    }

    @Override
    public void onClick(View v) {
        if (v == mData){
            mData.setSelected(true);
            mMap.setSelected(false);
            mViewPager.setCurrentItem(0);
        }
        if (v == mMap){
            mData.setSelected(false);
            mMap.setSelected(true);
            mViewPager.setCurrentItem(1);
            f2.getNetData();
        }
        if (v==train_menu){
            mDrawerLayout.openDrawer(Gravity.LEFT);
        }
        if (v==train_tongji){
//            mDrawerLayout.openDrawer(Gravity.RIGHT);
            if(isReadMsg){
                Intent intent = new Intent();
                if (MyApplication.loginModel.getType().equals("1")||MyApplication.loginModel.getType().equals("4")){
                    intent.setClass(mContext,GaojingLeadActivity.class);
                }else if(MyApplication.loginModel.getType().equals("2")){//乘务员
                    intent.setClass(mContext,GaojingTrainmanActivity.class);
                }else if(MyApplication.loginModel.getType().equals("3")){//检修员
                    intent.setClass(mContext,GaojingRepairerActivity.class);
                }
                intent.putExtra("troubleLevel",troubleLevel);
                intent.putExtra("type",2);
//                intent.putExtra("TroublesModel", JSON.toJSONString(ltroubles));
                startActivity(intent);
            }
        }


    }

    /**
     *	退出activity
     */
    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK
                && event.getAction() == KeyEvent.ACTION_DOWN) {

            if ((System.currentTimeMillis() - exitTime) > 2000) {
                Toast.makeText(this, "再按一次退出程序!",
                        Toast.LENGTH_SHORT).show();
                exitTime = System.currentTimeMillis();
            } else {
                //退出所有的activity
                Intent intent = new Intent();
                intent.setAction(BaseActivity.TAG_ESC_ACTIVITY);
                sendBroadcast(intent);
//                System.exit(0);
                finish();
            }
            return true;
        }
        return super.onKeyDown(keyCode, event);
    }

    /**
     * 得到所有的车次
     * @param list
     * @return
     */
    private List<String> getTrainNumberAll(List<TrainModel> list){
        List<String> str = new ArrayList<>();
        str.add("全部");
        for (int i=0;i<list.size();i++){
            str.add(list.get(i).getTrainNumber());
        }
        return str;
    }

    /**
     * 得到所有的车次id 与上面对应
     * @param list
     * @return
     */
    private List<String> getTrainIdAll(List<TrainModel> list){
        List<String> str = new ArrayList<>();
        str.add("全部");
        for (int i=0;i<list.size();i++){
            str.add(list.get(i).getTrainID());
        }
        return str;
    }

    /**
     *
     * com.sitemap.na2ne.activities.MessageReceiver
     * @author zhang
     * 推送消息接收器
     * create at 2016年3月10日 下午5:07:17
     */
	public class MessageReceiver extends BroadcastReceiver {

		@Override
		public void onReceive(Context context, Intent intent) {
			if (MESSAGE_RECEIVED_ACTION.equals(intent.getAction())) {
//                if(!isGifImg){
//                    HttpImageUtil.loadImageGif(main_gaojing,"assets://bjd.gif");
//                    isGifImg = true;
//                    isWay = true;
//                }
			}
		}
	}

}
